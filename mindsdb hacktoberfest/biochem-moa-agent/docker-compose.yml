version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.13-community
    container_name: dietmoa-neo4j
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password123}
      - NEO4J_dbms_memory_pagecache_size=2G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - ./data/neo4j/data:/data
      - ./data/neo4j/logs:/logs
      - ./data/neo4j/import:/import
      - ./data/neo4j/plugins:/plugins
    networks:
      - dietmoa-network
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MindsDB Platform
  mindsdb:
    image: mindsdb/mindsdb:latest
    container_name: dietmoa-mindsdb
    environment:
      - MINDSDB_DB_USER=${MINDSDB_USER:-mindsdb}
      - MINDSDB_DB_PASSWORD=${MINDSDB_PASSWORD:-mindsdb123}
      - MINDSDB_STORAGE_DIR=/data
    ports:
      - "47334:47334"  # HTTP API
      - "47335:47335"  # MySQL API
    volumes:
      - ./data/mindsdb:/data
      - ./config/mindsdb_config.yml:/root/mindsdb_config.yml
    networks:
      - dietmoa-network
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:47334/api/util/ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL for MindsDB
  postgres:
    image: postgres:15-alpine
    container_name: dietmoa-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres123}
      - POSTGRES_DB=mindsdb_db
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - dietmoa-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # LightRAG Service
  lightrag:
    build:
      context: ./services/lightrag
      dockerfile: Dockerfile
    container_name: dietmoa-lightrag
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password123}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8001:8001"
    volumes:
      - ./config/lightrag_config.yml:/app/config.yml
      - ./data/lightrag:/data
    networks:
      - dietmoa-network
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Mem0 Memory Management
  mem0:
    build:
      context: ./services/mem0
      dockerfile: Dockerfile
    container_name: dietmoa-mem0
    environment:
      - MEM0_PROVIDER=qdrant
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8002:8002"
    volumes:
      - ./config/mem0_config.yml:/app/config.yml
      - ./data/mem0:/data
    networks:
      - dietmoa-network
    depends_on:
      - qdrant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Qdrant Vector Database for Mem0
  qdrant:
    image: qdrant/qdrant:latest
    container_name: dietmoa-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./data/qdrant:/qdrant/storage
    networks:
      - dietmoa-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MCP Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dietmoa-mcp-server
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=8080
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password123}
      - MINDSDB_URL=http://mindsdb:47334
      - LIGHTRAG_URL=http://lightrag:8001
      - MEM0_URL=http://mem0:8002
      - PUBCHEM_API_KEY=${PUBCHEM_API_KEY}
      - CHEMBL_API_KEY=${CHEMBL_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8080:8080"
    volumes:
      - ./mcp_server:/app/mcp_server
      - ./agents:/app/agents
      - ./graph:/app/graph
      - ./memory:/app/memory
      - ./knowledge_base:/app/knowledge_base
      - ./data_sources:/app/data_sources
      - ./models:/app/models
      - ./utils:/app/utils
    networks:
      - dietmoa-network
    depends_on:
      neo4j:
        condition: service_healthy
      mindsdb:
        condition: service_healthy
      lightrag:
        condition: service_healthy
      mem0:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: dietmoa-redis
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis:/data
    networks:
      - dietmoa-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Jupyter for notebooks
  jupyter:
    image: jupyter/datascience-notebook:latest
    container_name: dietmoa-jupyter
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-biochem2025}
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
    networks:
      - dietmoa-network
    profiles:
      - development

  # Grafana for monitoring (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: dietmoa-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
      - GF_INSTALL_PLUGINS=redis-datasource
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - dietmoa-network
    profiles:
      - monitoring

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: dietmoa-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - dietmoa-network
    profiles:
      - monitoring

networks:
  dietmoa-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  neo4j-data:
  mindsdb-data:
  postgres-data:
  qdrant-data:
  redis-data:
  lightrag-data:
  mem0-data:
  grafana-data:
  prometheus-data:
